package dao

import (
	"context"
	"encoding/json"
	"time"

	"github.com/CMU-SIE-2022-ExamSystem/exam-system/global"
	"go.mongodb.org/mongo-driver/bson"
	"go.mongodb.org/mongo-driver/mongo"
)

func CreateExam(str1 string, str2 string, jsonData []byte) {
	client := global.Mongo
	//get the collection instance
	collection := client.Database("auto_exam").Collection("assessment_bank")
	//store the exam
	var exam AutoGenerated
	exam.Course = str1
	exam.Id = str2
	json.Unmarshal(jsonData, &exam)
	storeExam(collection, &exam)
	// fmt.Println("finish storing exam config!")
}

//store the assessment config into the mongodb
func storeExam(collection *mongo.Collection, exam *AutoGenerated) {
	ctx, cancel := context.WithTimeout(context.Background(), 10*time.Second)
	defer cancel()

	data, err := bson.Marshal(exam)
	if err != nil {
		// fmt.Println("serialization fail")
		panic(err)
	}

	collection.InsertOne(ctx, data)
}
